
use 'libs/tests/common.baabnq';
use 'libs/string.baabnq';
use 'libs/rand.baabnq';
use 'libs/chunk.baabnq';





lab TestString::StrLen;
    new 'hello world!' _p;
    push _p;
    sub String::StrLen;
    pull __;
    jump fail ~ __ != 12;
    free _p;
    
    put _i = 100;
    lab Local::TestString::StrLen::Loop;
        push _i;
        sub Rand::Xorshift;
        pull __;
        put __ = (__ & 2047);
        push __;
        
        new __ + 1 _p;
        push _p;
        push 1;
        push __;
        sub String::MemSet;
        put 0 -> _p + __;
        
                        
        push _p;
        sub Stack::Dup;
        sub String::StrLen;
        pull _len;
        pull _p;
                

        pull __;
        pull _i;
        jump fail ~ __ != _len;
                
        free _p;

        put _i = _i - 1;
    jump Local::TestString::StrLen::Loop ~ _i > 0;
        
    jump succ;




"kinda important
lab TestString::MemCpy;
    
    put _i = 10;
    lab Local::TestString::Loop;
        push _i;
    
        sub Rand::Xorshift;
        pull _len;
        put _len = _len & 511;
        new _len _pOriginal;
        
        put _j = 0;
        lab Local::TestString::Loop::Populate;
            sub Rand::Xorshift;
            pull __;
            put __ -> _pOriginal + _j;
            put _j = _j + 1;
        jump Local::TestString::Loop::Populate ~ _j < _len;
        
        new _len _pCopy;
        
        push _pOriginal;
        push _pCopy;
        push _len;
        sub String::MemCpy;
        
        push _pOriginal;
        sub Chunk::Hash;
        
        push _pCopy;
        sub Chunk::Hash;
        
        pull _t1;
        pull _t2;
        
        pull _i;
        
        jump fail ~ _t1 != _t2;
                
        free _pOriginal;
        free _pCopy;
        put _i = _i - 1;    
    jump Local::TestString::Loop ~ _i > 0;
    
    jump succ;
    



lab TestString::StrChr;

    new 'jzwcpmtnoixaykrfgelvhusdqb' _p;
    put _i = 0;
    lab Local::TestString::StrChr;
        put _v <- _p + _i;
        push _p;
        push _v;
        sub String::StrChr;
        pull __; jump fail ~ __ == 1;
        put _i = _i + 1;
    jump Local::TestString::StrChr ~ _i < 26;
    
    free _p;
        


    new 'hello world!' _p;
    push _p;
    push 33; "!
    sub String::StrChr;
    pull __; jump fail ~ __ != _p + 11;
    free _p;

    new 'qwerty \n \b \r   .,#12345{}() BC' _p;
    push _p;
    push 65; "A
    sub String::StrChr;
    pull __; jump fail ~ __ != 0;
    free _p;

    new '' _p;
    push _p;
    push 65; "A
    sub String::StrChr;
    pull __; jump fail ~ __ != 0;
    free _p;
        
    jump succ;

    

